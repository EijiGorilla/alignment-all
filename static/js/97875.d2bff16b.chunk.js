"use strict";(self.webpackChunkalignment_all=self.webpackChunkalignment_all||[]).push([[97875],{97875:(t,e,n)=>{n.r(e),n.d(e,{queryUnitIdentifiers:()=>p});var s=n(89379),r=n(3825),i=n(54994),a=n(35143),o=n(42553),u=n(46053),l=(n(81806),n(76460),n(47249),n(28379)),c=n(85842);let d=class extends o.A{constructor(t){super(t),this.container=null,this.ranges=null}readContainer(t,e){return{sourceId:e.sourceId,globalId:e.globalId}}readRanges(t,e){return[...e.gaps.map(t=>({firstUnit:t.start,numUnits:t.end-t.start+1,isGap:!0})),...e.unitIdentifiers.map(t=>({firstUnit:t.firstUnit,numUnits:t.numUnits,isGap:!1,content:{sourceId:t.sourceId,globalId:t.globalId}}))]}};async function p(t,e,n){const a=(0,i.Dl)(t),o=e.toJSON();e.objects&&(o.objects=JSON.stringify(e.objects));const u=(0,s.A)((0,s.A)({},o),{},{f:"json"}),l=(0,i.lF)((0,s.A)((0,s.A)({},a.query),u)),c=(0,i.jV)(l,(0,s.A)((0,s.A)({},n),{},{method:"post"})),p="".concat(a.path,"/unitIdentifiers/query"),{data:g}=await(0,r.A)(p,c);return g.objects.map(t=>d.fromJSON(t))}(0,a._)([(0,u.MZ)({type:Object})],d.prototype,"container",void 0),(0,a._)([(0,l.w)("container",["sourceId","globalId"])],d.prototype,"readContainer",null),(0,a._)([(0,u.MZ)({type:[Object]})],d.prototype,"ranges",void 0),(0,a._)([(0,l.w)("ranges",["gaps","unitIdentifiers"])],d.prototype,"readRanges",null),d=(0,a._)([(0,c.$)("esri.rest.networks.unitIdentifiers.support.UnitQueryResult")],d)}}]);
//# sourceMappingURL=97875.d2bff16b.chunk.js.map