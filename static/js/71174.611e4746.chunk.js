"use strict";(self.webpackChunkalignment_all=self.webpackChunkalignment_all||[]).push([[71174],{71174:(e,r,t)=>{t.r(r),t.d(r,{default:()=>N});var i,s=t(89379),a=t(35143),l=t(3825),o=t(50076),n=t(27741),p=t(77717),c=t(50346),u=t(90534),d=t(46053),h=t(21403),y=(t(81806),t(47249),t(28379)),v=t(85842),f=t(17707),_=t(13312),g=t(25515),m=t(12406),A=t(76328),S=t(36648),T=t(19502),b=t(65624),w=t(31362),M=t(11270),O=t(94729),R=t(21617),Z=t(5682),P=t(73907),W=t(13096),U=t(95363),k=t(16852),C=t(39568),j=t(731);const I=["Canvas/World_Dark_Gray_Base","Canvas/World_Dark_Gray_Reference","Canvas/World_Light_Gray_Base","Canvas/World_Light_Gray_Reference","Elevation/World_Hillshade","Elevation/World_Hillshade_Dark","Ocean/World_Ocean_Base","Ocean/World_Ocean_Reference","Ocean_Basemap","Reference/World_Boundaries_and_Places","Reference/World_Boundaries_and_Places_Alternate","Reference/World_Transportation","World_Imagery","World_Street_Map","World_Topo_Map"];let L=i=class extends((0,b.dM)((0,Z.j)((0,P.I)((0,A.f)((0,S.V)((0,M.q)((0,O.A)((0,T.b)((0,p.P)((0,R.J)((0,m.p)((0,w.d)(g.A))))))))))))){constructor(){super(...arguments),this.listMode="show",this.elevationInfo=new j.A({mode:"on-the-ground"}),this.isReference=null,this.operationalLayerType="ArcGISTiledMapServiceLayer",this.resampling=!0,this.sourceJSON=null,this.spatialReference=null,this.path=null,this.sublayers=null,this.type="tile",this.url=null}normalizeCtorArgs(e,r){return"string"==typeof e?(0,s.A)({url:e},r):e}load(e){const r=null!=e?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},e).catch(c.QP).then(()=>this._fetchService(r))),Promise.resolve(this)}get attributionDataUrl(){var e;const r=null===(e=this.parsedUrl)||void 0===e?void 0:e.path.toLowerCase();return r?this._getDefaultAttribution(this._getMapName(r)):null}readSpatialReference(e,r){var t;return(e=e||(null===(t=r.tileInfo)||void 0===t?void 0:t.spatialReference))&&_.A.fromJSON(e)}writeSublayers(e,r,t,i){if(!this.loaded||!e)return;const a=e.slice().reverse().flatten(e=>{let{sublayers:r}=e;return r&&r.toArray().reverse()}).toArray(),l=[],o=(0,s.A)({writeSublayerStructure:!1},i);a.forEach(e=>{const r=e.write({},o);l.push(r)}),l.some(e=>Object.keys(e).length>1)&&(r.layers=l)}get tileServers(){var e;return this._getDefaultTileServers(null===(e=this.parsedUrl)||void 0===e?void 0:e.path)}castTileServers(e){return Array.isArray(e)?e.map(e=>(0,u.An)(e).path):null}fetchTile(e,r,t){let i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};const{signal:a}=i,o=this.getTileUrl(e,r,t),n={responseType:"image",signal:a,query:(0,s.A)({},this.refreshParameters)};return(0,l.A)(o,n).then(e=>e.data)}async fetchImageBitmapTile(e,r,t){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};const{signal:o}=a;if(this.fetchTile!==i.prototype.fetchTile){const i=await this.fetchTile(e,r,t,a);return(0,k.C)(i,e,r,t,o)}const n=this.getTileUrl(e,r,t),p={responseType:"blob",signal:o,query:(0,s.A)({},this.refreshParameters)},{data:c}=await(0,l.A)(n,p);return(0,k.C)(c,e,r,t,o)}getTileUrl(e,r,t){var i,a;const l=!this.capabilities.operations.supportsTileMap&&this.supportsBlankTile,o=(0,u.x0)((0,s.A)((0,s.A)((0,s.A)({},null===(i=this.parsedUrl)||void 0===i?void 0:i.query),{},{blankTile:!l&&null},this.customParameters),{},{token:this.apiKey})),n=this.tileServers;return"".concat(n&&n.length?n[r%n.length]:null===(a=this.parsedUrl)||void 0===a?void 0:a.path,"/tile/").concat(e,"/").concat(r,"/").concat(t).concat(o?"?"+o:"")}loadAll(){return(0,n.g)(this,e=>{e(this.allSublayers)})}_fetchService(e){return new Promise((r,t)=>{if(this.sourceJSON){if(null!=this.sourceJSON.bandCount&&null!=this.sourceJSON.pixelSizeX)throw new o.A("tile-layer:unsupported-url","use ImageryTileLayer to open a tiled image service");return void r({data:this.sourceJSON})}if(!this.parsedUrl)throw new o.A("tile-layer:undefined-url","layer's url is not defined");const i=(0,W.qg)(this.parsedUrl.path);if(null!=i&&"ImageServer"===i.serverType)throw new o.A("tile-layer:unsupported-url","use ImageryTileLayer to open a tiled image service");(0,l.A)(this.parsedUrl.path,{query:(0,s.A)((0,s.A)((0,s.A)({f:"json"},this.parsedUrl.query),this.customParameters),{},{token:this.apiKey}),responseType:"json",signal:e}).then(r,t)}).then(r=>{let t=this.url;if(r.ssl&&(t=this.url=t.replace(/^http:/i,"https:")),this.sourceJSON=r.data,this.read(r.data,{origin:"service",url:this.parsedUrl}),10.1===this.version&&!(0,W.Wo)(t))return this._fetchServerVersion(t,e).then(e=>{this.read({currentVersion:e})}).catch(()=>{})})}_fetchServerVersion(e,r){if(!(0,W.Fi)(e))return Promise.reject();const t=e.replace(/(.*\/rest)\/.*/i,"$1")+"/info";return(0,l.A)(t,{query:(0,s.A)((0,s.A)({f:"json"},this.customParameters),{},{token:this.apiKey}),responseType:"json",signal:r}).then(e=>{var r;if(null!==(r=e.data)&&void 0!==r&&r.currentVersion)return e.data.currentVersion;throw new o.A("tile-layer:version-not-available","Server did not provide a version")})}_getMapName(e){const r=e.match(/^(?:https?:)?\/\/(server\.arcgisonline\.com|services\.arcgisonline\.com|ibasemaps-api\.arcgis\.com)\/arcgis\/rest\/services\/([^/]+(\/[^/]+)*)\/mapserver/i);return r?r[2]:void 0}_getDefaultAttribution(e){if(null==e)return null;let r;e=e.toLowerCase();for(let t=0,i=I.length;t<i;t++)if(r=I[t],r.toLowerCase().includes(e))return(0,u.s2)("//static.arcgis.com/attribution/"+r);return null}_getDefaultTileServers(e){if(null==e)return[];const r=-1!==e.search(/^(?:https?:)?\/\/server\.arcgisonline\.com/i),t=-1!==e.search(/^(?:https?:)?\/\/services\.arcgisonline\.com/i);return r||t?[e,e.replace(r?/server\.arcgisonline/i:/services\.arcgisonline/i,r?"services.arcgisonline":"server.arcgisonline")]:[]}get hasOverriddenFetchTile(){return!this.fetchTile[B]}};(0,a._)([(0,d.MZ)({readOnly:!0})],L.prototype,"attributionDataUrl",null),(0,a._)([(0,d.MZ)({type:["show","hide","hide-children"]})],L.prototype,"listMode",void 0),(0,a._)([(0,d.MZ)({json:{read:!0,write:!0}})],L.prototype,"blendMode",void 0),(0,a._)([(0,d.MZ)()],L.prototype,"elevationInfo",void 0),(0,a._)([(0,d.MZ)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],L.prototype,"isReference",void 0),(0,a._)([(0,d.MZ)({readOnly:!0,type:["ArcGISTiledMapServiceLayer"]})],L.prototype,"operationalLayerType",void 0),(0,a._)([(0,d.MZ)({type:Boolean})],L.prototype,"resampling",void 0),(0,a._)([(0,d.MZ)()],L.prototype,"sourceJSON",void 0),(0,a._)([(0,d.MZ)({type:_.A})],L.prototype,"spatialReference",void 0),(0,a._)([(0,y.w)("spatialReference",["spatialReference","tileInfo"])],L.prototype,"readSpatialReference",null),(0,a._)([(0,d.MZ)({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],L.prototype,"path",void 0),(0,a._)([(0,d.MZ)({readOnly:!0})],L.prototype,"sublayers",void 0),(0,a._)([(0,f.K)("sublayers",{layers:{type:[C.A]}})],L.prototype,"writeSublayers",null),(0,a._)([(0,d.MZ)({json:{read:!1,write:!1}})],L.prototype,"popupEnabled",void 0),(0,a._)([(0,d.MZ)()],L.prototype,"tileServers",null),(0,a._)([(0,h.w)("tileServers")],L.prototype,"castTileServers",null),(0,a._)([(0,d.MZ)({readOnly:!0,json:{read:!1}})],L.prototype,"type",void 0),(0,a._)([(0,d.MZ)(U.OZ)],L.prototype,"url",void 0),L=i=(0,a._)([(0,v.$)("esri.layers.TileLayer")],L);const B=Symbol("default-fetch-tile");L.prototype.fetchTile[B]=!0;const N=L}}]);
//# sourceMappingURL=71174.611e4746.chunk.js.map